{"ast":null,"code":"var _jsxFileName = \"/Users/asane/udemy/react_en/transaction/src/components/ModalEdit.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport EntryForm from \"./EntryForm\";\nimport { useDispatch } from \"react-redux\";\nimport { closeEditModal } from \"../actions/modals.actions\";\nimport useEntryDetails from \"../hooks/useEntryDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ModalEdit = function ModalEdit(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      value = _ref.value,\n      description = _ref.description,\n      isExpense = _ref.isExpense,\n      id = _ref.id;\n  var dispatch = useDispatch();\n  var entryUpdate = useEntryDetails(description, value, isExpense);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Edit entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(EntryForm, {\n        value: entryUpdate.value,\n        description: entryUpdate.description,\n        isExpense: entryUpdate.isExpense,\n        setDescription: entryUpdate.setDescription,\n        setValue: entryUpdate.setValue,\n        setIsExpense: entryUpdate.setIsExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return dispatch(closeEditModal());\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          return entryUpdate.updateEntry(id);\n        },\n        positive: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ModalEdit, \"CtIJhR8MoeOYHW9yuRqHVUGgmUQ=\", false, function () {\n  return [useDispatch, useEntryDetails];\n});\n\n_c = ModalEdit;\nexport default ModalEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEdit\");","map":{"version":3,"sources":["/Users/asane/udemy/react_en/transaction/src/components/ModalEdit.js"],"names":["React","Button","Modal","EntryForm","useDispatch","closeEditModal","useEntryDetails","ModalEdit","isOpen","value","description","isExpense","id","dispatch","entryUpdate","setDescription","setValue","setIsExpense","updateEntry"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmD;AAAA;;AAAA,MAAhDC,MAAgD,QAAhDA,MAAgD;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,MAATC,EAAS,QAATA,EAAS;AACnE,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,WAAW,GAAGR,eAAe,CAACI,WAAD,EAAcD,KAAd,EAAqBE,SAArB,CAAnC;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,MAAb;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD,CAAO,OAAP;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAEM,WAAW,CAACL,KADrB;AAEE,QAAA,WAAW,EAAEK,WAAW,CAACJ,WAF3B;AAGE,QAAA,SAAS,EAAEI,WAAW,CAACH,SAHzB;AAIE,QAAA,cAAc,EAAEG,WAAW,CAACC,cAJ9B;AAKE,QAAA,QAAQ,EAAED,WAAW,CAACE,QALxB;AAME,QAAA,YAAY,EAAEF,WAAW,CAACG;AAN5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFF,eAYE,QAAC,KAAD,CAAO,OAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMJ,QAAQ,CAACR,cAAc,EAAf,CAAd;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMS,WAAW,CAACI,WAAZ,CAAwBN,EAAxB,CAAN;AAAA,SAAjB;AAAoD,QAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAxBD;;GAAML,S;UACaH,W,EACGE,e;;;KAFhBC,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport EntryForm from \"./EntryForm\";\nimport { useDispatch } from \"react-redux\";\nimport { closeEditModal } from \"../actions/modals.actions\";\nimport useEntryDetails from \"../hooks/useEntryDetails\";\n\nconst ModalEdit = ({ isOpen, value, description, isExpense, id }) => {\n  const dispatch = useDispatch();\n  const entryUpdate = useEntryDetails(description, value, isExpense);\n  return (\n    <Modal open={isOpen}>\n      <Modal.Header>Edit entry</Modal.Header>\n      <Modal.Content>\n        <EntryForm\n          value={entryUpdate.value}\n          description={entryUpdate.description}\n          isExpense={entryUpdate.isExpense}\n          setDescription={entryUpdate.setDescription}\n          setValue={entryUpdate.setValue}\n          setIsExpense={entryUpdate.setIsExpense}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={() => dispatch(closeEditModal())}>Close</Button>\n        <Button onClick={() => entryUpdate.updateEntry(id)} positive>\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nexport default ModalEdit;\n"]},"metadata":{},"sourceType":"module"}