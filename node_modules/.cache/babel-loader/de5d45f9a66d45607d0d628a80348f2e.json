{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport entriesReducer from \"../reducers/entiries.reducers\";\nimport modalsReducers from \"../reducers/modals.reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware];\n\nvar configStore = function configStore() {\n  return createStore(combineReducers({\n    entries: entriesReducer,\n    modals: modalsReducers\n  }), composeWithDevTools(applyMiddleware.apply(void 0, middlewares)));\n};\n\nexport default configStore;","map":{"version":3,"sources":["/Users/asane/udemy/react_en/transaction/src/store/configStore.js"],"names":["createStore","combineReducers","applyMiddleware","entriesReducer","modalsReducers","composeWithDevTools","createSagaMiddleware","sagaMiddleware","middlewares","configStore","entries","modals"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,IAAMC,cAAc,GAAGD,oBAAoB,EAA3C;AACA,IAAME,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SAAOT,WAAW,CAChBC,eAAe,CAAC;AACdS,IAAAA,OAAO,EAAEP,cADK;AAEdQ,IAAAA,MAAM,EAAEP;AAFM,GAAD,CADC,EAKhBC,mBAAmB,CAACH,eAAe,MAAf,SAAmBM,WAAnB,CAAD,CALH,CAAlB;AAOD,CARD;;AAUA,eAAeC,WAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport entriesReducer from \"../reducers/entiries.reducers\";\nimport modalsReducers from \"../reducers/modals.reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst configStore = () => {\n  return createStore(\n    combineReducers({\n      entries: entriesReducer,\n      modals: modalsReducers,\n    }),\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n};\n\nexport default configStore;\n"]},"metadata":{},"sourceType":"module"}