{"ast":null,"code":"import _objectSpread from \"/Users/asane/udemy/react_en/transaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/asane/udemy/react_en/transaction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/asane/udemy/react_en/transaction/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./styles.css\";\nimport MainHeader from \"./components/MainHeader\";\nimport NewEntryForm from \"./components/NewEntryForm\";\nimport DisplayBalance from \"./components/DisplayBalance\";\nimport DisplayBalances from \"./components/DisplayBalances\";\nimport EntryLines from \"./components/EntryLines\";\nimport ModalEdlit from \"./components/ModalEdit\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      incomeTotal = _useState2[0],\n      setIncomeTotal = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      expenseTotal = _useState4[0],\n      setExpenseTotal = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      entry = _useState8[0],\n      setEntry = _useState8[1];\n\n  var entries = useSelector(function (state) {\n    return state.entries;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.modals;\n  }),\n      isOpen = _useSelector.isOpen,\n      id = _useSelector.id;\n\n  useEffect(function () {\n    var index = entries.findIndex(function (entry) {\n      return entry.id === id;\n    });\n    setEntry(entries[index]); // eslint-disable-next-line react\n  }, [isOpen, id]);\n  useEffect(function () {\n    var totalIncom = 0;\n    var totalExpenses = 0;\n    entries.map(function (entry) {\n      if (entry.isExpense) {\n        return totalExpenses += Number(entry.value);\n      }\n\n      return totalIncom += Number(entry.value); // eslint-disable-next-line react-hooks/exhaustive-deps\n    });\n    setTotal(totalIncom - totalExpenses);\n    setIncomeTotal(totalIncom);\n    setExpenseTotal(totalExpenses);\n  }, [entries]); // store.subscribe(() => {\n  //   console.log(\"store\", store.getState());\n  // });\n  // const payload_add = {\n  //   id: 5,\n  //   description: \"Hello from redux\",\n  //   value: 100,\n  //   isExpense: false\n  // };\n  // const payload_remove = {\n  //   id: 1\n  // };\n  // store.dispatch(addEntryRedux(payload_add));\n  // store.dispatch(removeEntryRedux(1));\n  // const edeitEntry = (id) => {\n  //   console.log(`edeit entry id with ${id}`);\n  //   if (id) {\n  //     const index = entries.findIndex((entry) => entry.id === id);\n  //     const entry = entries[index];\n  //     setEntryId(id);\n  //     setDescription(entry.description);\n  //     setValue(entry.value);\n  //     setIsExpense(entry.isExpense);\n  //     setIsOpen(true);\n  //   }\n  // };\n  // const addEntry = () => {\n  //   const result = entries.concat({\n  //     id: entries.length + 1,\n  //     description,\n  //     value,\n  //     isExpense\n  //   });\n  //   // setEntries(result);\n  //   resetEntry();\n  // };\n  // const resetEntry = () => {\n  //   setDescription(\"\");\n  //   setValue(\"\");\n  //   setIsExpense(true);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      title: \"Budget\",\n      tyle: \"h1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayBalance, {\n      title: \"Your Balance\",\n      value: total,\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayBalances, {\n      incomeTotal: incomeTotal,\n      expenseTotal: expenseTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainHeader, {\n      title: \"History\",\n      tyle: \"h3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EntryLines, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainHeader, {\n      title: \"Add new transaction\",\n      tyle: \"h3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewEntryForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalEdlit, _objectSpread({\n      isOpen: isOpen\n    }, entry), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n} // var initialEntries = [\n//   {\n//     id: 1,\n//     description: \"Work Income\",\n//     value: 10000,\n//     isExpense: false\n//   },\n//   {\n//     id: 2,\n//     description: \"Work BIll\",\n//     value: 20,\n//     isExpense: true\n//   },\n//   {\n//     id: 3,\n//     description: \"Rent\",\n//     value: 2000,\n//     isExpense: true\n//   }\n// ];\n\n_s(App, \"nsv0hjzUUrlz3H/rHslVf/Y0H+k=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/asane/udemy/react_en/transaction/src/App.js"],"names":["React","useEffect","useState","Container","MainHeader","NewEntryForm","DisplayBalance","DisplayBalances","EntryLines","ModalEdlit","useSelector","App","incomeTotal","setIncomeTotal","expenseTotal","setExpenseTotal","total","setTotal","entry","setEntry","entries","state","modals","isOpen","id","index","findIndex","totalIncom","totalExpenses","map","isExpense","Number","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./styles.css\";\n\nimport MainHeader from \"./components/MainHeader\";\nimport NewEntryForm from \"./components/NewEntryForm\";\nimport DisplayBalance from \"./components/DisplayBalance\";\nimport DisplayBalances from \"./components/DisplayBalances\";\nimport EntryLines from \"./components/EntryLines\";\nimport ModalEdlit from \"./components/ModalEdit\";\n\nimport { useSelector } from \"react-redux\";\n\nexport default function App() {\n  const [incomeTotal, setIncomeTotal] = useState(0);\n  const [expenseTotal, setExpenseTotal] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [entry, setEntry] = useState();\n  const entries = useSelector((state) => state.entries);\n  const { isOpen, id } = useSelector((state) => state.modals);\n\n  useEffect(() => {\n    const index = entries.findIndex((entry) => entry.id === id);\n    setEntry(entries[index]);\n    // eslint-disable-next-line react\n  }, [isOpen, id]);\n\n  useEffect(() => {\n    let totalIncom = 0;\n    let totalExpenses = 0;\n    entries.map((entry) => {\n      if (entry.isExpense) {\n        return (totalExpenses += Number(entry.value));\n      }\n      return (totalIncom += Number(entry.value));\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    });\n    setTotal(totalIncom - totalExpenses);\n    setIncomeTotal(totalIncom);\n    setExpenseTotal(totalExpenses);\n  }, [entries]);\n\n  // store.subscribe(() => {\n  //   console.log(\"store\", store.getState());\n  // });\n\n  // const payload_add = {\n  //   id: 5,\n  //   description: \"Hello from redux\",\n  //   value: 100,\n  //   isExpense: false\n  // };\n\n  // const payload_remove = {\n  //   id: 1\n  // };\n\n  // store.dispatch(addEntryRedux(payload_add));\n  // store.dispatch(removeEntryRedux(1));\n\n  // const edeitEntry = (id) => {\n  //   console.log(`edeit entry id with ${id}`);\n  //   if (id) {\n  //     const index = entries.findIndex((entry) => entry.id === id);\n  //     const entry = entries[index];\n  //     setEntryId(id);\n  //     setDescription(entry.description);\n  //     setValue(entry.value);\n  //     setIsExpense(entry.isExpense);\n  //     setIsOpen(true);\n  //   }\n  // };\n\n  // const addEntry = () => {\n  //   const result = entries.concat({\n  //     id: entries.length + 1,\n  //     description,\n  //     value,\n  //     isExpense\n  //   });\n  //   // setEntries(result);\n  //   resetEntry();\n  // };\n\n  // const resetEntry = () => {\n  //   setDescription(\"\");\n  //   setValue(\"\");\n  //   setIsExpense(true);\n  // };\n  return (\n    <Container>\n      <MainHeader title=\"Budget\" tyle=\"h1\" />\n      <DisplayBalance title=\"Your Balance\" value={total} size=\"small\" />\n      <DisplayBalances incomeTotal={incomeTotal} expenseTotal={expenseTotal} />\n\n      <MainHeader title=\"History\" tyle=\"h3\" />\n      <EntryLines entries={entries} />\n\n      <MainHeader title=\"Add new transaction\" tyle=\"h3\" />\n\n      <NewEntryForm />\n      <ModalEdlit isOpen={isOpen} {...entry} />\n    </Container>\n  );\n}\n\n// var initialEntries = [\n//   {\n//     id: 1,\n//     description: \"Work Income\",\n//     value: 10000,\n//     isExpense: false\n//   },\n//   {\n//     id: 2,\n//     description: \"Work BIll\",\n//     value: 20,\n//     isExpense: true\n//   },\n//   {\n//     id: 3,\n//     description: \"Rent\",\n//     value: 2000,\n//     isExpense: true\n//   }\n// ];\n"]},"metadata":{},"sourceType":"module"}