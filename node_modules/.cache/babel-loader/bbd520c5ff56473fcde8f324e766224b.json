{"ast":null,"code":"var _jsxFileName = \"/Users/asane/udemy/react_en/transaction/src/components/DisplayBalances.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Container, Grid, Header, Segment, Statistic, Icon, Form, Button } from \"semantic-ui-react\";\nimport DisplayBalance from \"./DisplayBalance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DisplayBalances = function DisplayBalances(_ref) {\n  var incomeTotal = _ref.incomeTotal,\n      expenseTotal = _ref.expenseTotal;\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    textAlign: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      divided: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(DisplayBalance, {\n            title: \"Income\",\n            value: incomeTotal,\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(DisplayBalance, {\n            title: \"Expenses\",\n            value: expenseTotal,\n            color: \"red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = DisplayBalances;\nexport default DisplayBalances;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayBalances\");","map":{"version":3,"sources":["/Users/asane/udemy/react_en/transaction/src/components/DisplayBalances.js"],"names":["React","Container","Grid","Header","Segment","Statistic","Icon","Form","Button","DisplayBalance","DisplayBalances","incomeTotal","expenseTotal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,MARF,QASO,mBATP;AAUA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAmC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACzD,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,MAAzB;AAAA,6BACE,QAAC,IAAD,CAAM,GAAN;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAC,QAAtB;AAA+B,YAAA,KAAK,EAAED,WAAtC;AAAmD,YAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAC,UAAtB;AAAiC,YAAA,KAAK,EAAEC,YAAxC;AAAsD,YAAA,KAAK,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;KAAMF,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Segment,\n  Statistic,\n  Icon,\n  Form,\n  Button\n} from \"semantic-ui-react\";\nimport DisplayBalance from \"./DisplayBalance\";\n\nconst DisplayBalances = ({ incomeTotal, expenseTotal }) => {\n  return (\n    <Segment textAlign=\"center\">\n      <Grid columns={2} divided>\n        <Grid.Row>\n          <Grid.Column>\n            <DisplayBalance title=\"Income\" value={incomeTotal} color=\"green\" />\n          </Grid.Column>\n          <Grid.Column>\n            <DisplayBalance title=\"Expenses\" value={expenseTotal} color=\"red\" />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default DisplayBalances;\n"]},"metadata":{},"sourceType":"module"}